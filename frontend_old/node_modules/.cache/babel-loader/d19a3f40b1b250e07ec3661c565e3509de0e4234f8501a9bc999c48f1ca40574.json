{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rokazz\\\\dev\\\\school_projects\\\\varztai\\\\varztai\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = token => {\n    localStorage.setItem('token', token);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","login","token","localStorage","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/rokazz/dev/school_projects/varztai/varztai/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n}\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const login = (token: string) => {\r\n    localStorage.setItem('token', token);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY9E,MAAMC,WAAW,gBAAGL,aAAa,CAAyB,IAAI,CAAC;AAE/D,OAAO,MAAMM,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMU,KAAK,GAAIC,KAAa,IAAK;IAC/BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpCF,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChCN,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,eAAe;MAAEE,KAAK;MAAEI;IAAO,CAAE;IAAAR,QAAA,EAC7DA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CAlBWF,YAAyC;AAAAiB,EAAA,GAAzCjB,YAAyC;AAoBtD,OAAO,MAAMkB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxB,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}